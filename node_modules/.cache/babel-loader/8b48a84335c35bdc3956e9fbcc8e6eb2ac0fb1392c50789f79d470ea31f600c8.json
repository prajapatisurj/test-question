{"ast":null,"code":"var _jsxFileName = \"/home/agl/Desktop/js/demo/src/TransferList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./transfer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransferList = () => {\n  _s();\n  const [select, setSelect] = useState([]); // Items selected on the right list\n  const [transfer, setTransfer] = useState([]); // Items moved to the left list\n\n  const arr = [{\n    id: 1,\n    name: \"John Doe\",\n    amount: 1000\n  }, {\n    id: 2,\n    name: \"Jane Doe\",\n    amount: 500\n  }, {\n    id: 3,\n    name: \"Michael Doe\",\n    amount: 2000\n  }];\n\n  // Filter the original list to exclude transferred items\n  const availableItems = arr.filter(item => !transfer.find(t => t.id === item.id));\n  const handleSelect = (item, isRightSide) => {\n    // Handle item selection on both sides\n    const list = isRightSide ? select : transfer;\n    const setList = isRightSide ? setSelect : setTransfer;\n    if (list.find(selected => selected.id === item.id)) {\n      // Deselect if already selected\n      setList(list.filter(selected => selected.id !== item.id));\n    } else {\n      // Add to the selection\n      setList([...list, item]);\n    }\n  };\n  const handleMoveToLeft = () => {\n    setTransfer(transfer.filter(item => !select.find(s => s.id === item.id)));\n    setSelect([]);\n  };\n  const handleMoveToRight = () => {\n    setTransfer([...transfer, ...place]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfer-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Transfer List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transfer-list__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list right-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Available Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), availableItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${select.find(s => s.id === item.id) ? \"selected\" : \"\"}`,\n            onClick: () => handleSelect(item, true),\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleMoveToRight,\n            disabled: select.length === 0,\n            className: \"move-button\",\n            children: \"Move Right \\u27A1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleMoveToLeft,\n            disabled: select.length === 0,\n            className: \"move-button\",\n            children: \"\\u2B05\\uFE0F Move Left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list left-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Transferred Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), transfer.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${select.find(s => s.id === item.id) ? \"selected\" : \"\"}`,\n            onClick: () => handleSelect(item, false),\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(TransferList, \"jZT+PiUkkIWsIcwLcHem31DgysI=\");\n_c = TransferList;\nexport default TransferList;\nvar _c;\n$RefreshReg$(_c, \"TransferList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TransferList","_s","select","setSelect","transfer","setTransfer","arr","id","name","amount","availableItems","filter","item","find","t","handleSelect","isRightSide","list","setList","selected","handleMoveToLeft","s","handleMoveToRight","place","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","disabled","length","_c","$RefreshReg$"],"sources":["/home/agl/Desktop/js/demo/src/TransferList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./transfer.css\";\n\nconst TransferList = () => {\n  const [select, setSelect] = useState([]); // Items selected on the right list\n  const [transfer, setTransfer] = useState([]); // Items moved to the left list\n\n  const arr = [\n    { id: 1, name: \"John Doe\", amount: 1000 },\n    { id: 2, name: \"Jane Doe\", amount: 500 },\n    { id: 3, name: \"Michael Doe\", amount: 2000 },\n  ];\n\n  // Filter the original list to exclude transferred items\n  const availableItems = arr.filter(\n    (item) => !transfer.find((t) => t.id === item.id)\n  );\n\n  const handleSelect = (item, isRightSide) => {\n    // Handle item selection on both sides\n    const list = isRightSide ? select : transfer;\n    const setList = isRightSide ? setSelect : setTransfer;\n\n    if (list.find((selected) => selected.id === item.id)) {\n      // Deselect if already selected\n      setList(list.filter((selected) => selected.id !== item.id));\n    } else {\n      // Add to the selection\n      setList([...list, item]);\n    }\n  };\n\n  const handleMoveToLeft = () => {\n    setTransfer(\n      transfer.filter((item) => !select.find((s) => s.id === item.id))\n    );\n    setSelect([]);\n  };\n\n  const handleMoveToRight = () => {\n    setTransfer([...transfer, ...place]);\n  };\n  \n  return (\n    <div className=\"main\">\n      <div className=\"transfer-list\">\n        <h1>Transfer List</h1>\n        <div className=\"transfer-list__container\">\n          {/* Available Items (Right Side) */}\n          <div className=\"list right-list\">\n            <h2>Available Items</h2>\n            {availableItems.map((item) => (\n              <div\n                key={item.id}\n                className={`list-item ${\n                  select.find((s) => s.id === item.id) ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleSelect(item, true)}\n              >\n                {item.name}\n              </div>\n            ))}\n          </div>\n\n          {/* Buttons to Move */}\n          <div className=\"buttons\">\n            <button\n              onClick={handleMoveToRight}\n              disabled={select.length === 0}\n              className=\"move-button\"\n            >\n              Move Right ➡️\n            </button>\n            <button\n              onClick={handleMoveToLeft}\n              disabled={select.length === 0}\n              className=\"move-button\"\n            >\n              ⬅️ Move Left\n            </button>\n          </div>\n\n          {/* Transferred Items (Left Side) */}\n          <div className=\"list left-list\">\n            <h2>Transferred Items</h2>\n            {transfer.map((item) => (\n              <div\n                key={item.id}\n                className={`list-item ${\n                  select.find((s) => s.id === item.id) ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleSelect(item, false)}\n              >\n                {item.name}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TransferList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}